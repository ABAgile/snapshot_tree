root_query: |
  (
    SELECT model.* FROM {{model_table}} model
    {{#if snapshot_field}}
      LEFT JOIN (
        SELECT {{child_key}}, {{parent_key}}, {{snapshot_field}}, id,
          {{#is_active_field}}{{this}}, {{/is_active_field}}
          RANK() OVER (PARTITION BY {{child_key}} ORDER BY {{snapshot_field}} DESC, id DESC)
        FROM {{join_table}}
        WHERE {{snapshot_field}} <= '__snapshot_value__'
        {{#is_active_field}}AND {{this}}{{/is_active_field}}
      ) AS tree ON tree.{{child_key}} = model.id AND COALESCE(tree.rank, 1) = 1
    {{else}}
      LEFT JOIN {{join_table}} tree ON tree.{{child_key}} = model.id
    {{/if}}
    WHERE tree.{{parent_key}} IS NULL
  ) AS {{model_table}}

leaf_query: |
  (
    SELECT model.* FROM {{model_table}} model
    {{#if snapshot_field}}
      LEFT JOIN (
        SELECT {{child_key}}, {{parent_key}}, {{snapshot_field}}, id,
          {{#is_active_field}}{{this}}, {{/is_active_field}}
          RANK() OVER (PARTITION BY {{child_key}} ORDER BY {{snapshot_field}} DESC, id DESC)
        FROM {{join_table}}
        WHERE {{snapshot_field}} <= '__snapshot_value__'
        {{#is_active_field}}AND {{this}}{{/is_active_field}}
      ) AS tree ON tree.{{parent_key}} = model.id AND COALESCE(tree.rank, 1) = 1
    {{else}}
      LEFT JOIN {{join_table}} tree ON tree.{{parent_key}} = model.id
    {{/if}}
    WHERE tree.{{child_key}} IS NULL
  ) AS {{model_table}}

descendent_query: |
  (
    WITH RECURSIVE tree AS (
      SELECT
        alias.{{child_key}}, alias.{{parent_key}},
        ARRAY[alias.{{parent_key}}] AS {{path}}, 1 AS {{depth}}, false AS {{cycle}}
      FROM {{join_table}} alias
        {{#if snapshot_field}}JOIN snapshot ON snapshot.id = alias.id{{/if}}
      WHERE alias.{{parent_key}} = __model_id__
      UNION ALL
      SELECT
        alias.{{child_key}}, alias.{{parent_key}},
        tree.{{path}} || alias.{{parent_key}} AS {{path}},
        tree.{{depth}} + 1 AS {{depth}},
        alias.{{child_key}} = ANY(tree.{{path}}) AS {{cycle}}
      FROM tree
        JOIN {{join_table}} alias ON alias.{{parent_key}} = tree.{{child_key}}
        {{#if snapshot_field}}JOIN snapshot ON snapshot.id = alias.id{{/if}}
      WHERE NOT tree.{{cycle}}
    )
    ,snapshot AS (
      SELECT alias.id
      FROM {{model_table}} model
      {{#if snapshot_field}}
        LEFT JOIN (
          SELECT {{child_key}}, {{parent_key}}, {{snapshot_field}}, id,
            {{#is_active_field}}{{this}}, {{/is_active_field}}
            RANK() OVER (PARTITION BY {{child_key}} ORDER BY {{snapshot_field}} DESC, id DESC)
          FROM {{join_table}}
          WHERE {{snapshot_field}} <= '__snapshot_value__'
          {{#is_active_field}}AND {{this}}{{/is_active_field}}
        ) AS alias ON alias.{{child_key}} = model.id AND COALESCE(rank, 1) = 1
      {{else}}
        LEFT JOIN {{join_table}} alias ON alias.{{child_key}} = model.id
      {{/if}}
      WHERE alias.{{parent_key}} IS NOT NULL
    )
    SELECT model.*, tree.*
    FROM tree
    JOIN {{model_table}} model ON model.id = tree.{{child_key}}
    WHERE NOT tree.{{cycle}}
  ) AS {{model_table}}

ancestor_query: |
  (
    WITH RECURSIVE tree AS (
      SELECT
        alias.{{child_key}}, alias.{{parent_key}},
        ARRAY[alias.{{parent_key}}] AS {{path}}, 1 AS {{depth}}, false AS {{cycle}}
      FROM {{join_table}} alias
        {{#if snapshot_field}}JOIN snapshot ON snapshot.id = alias.id{{/if}}
      WHERE alias.{{child_key}} = __model_id__
      UNION ALL
      SELECT
        alias.{{child_key}}, alias.{{parent_key}},
        tree.{{path}} || alias.{{parent_key}} AS {{path}},
        tree.{{depth}} + 1 AS {{depth}},
        alias.{{parent_key}} = ANY(tree.{{path}}) AS {{cycle}}
      FROM tree
        JOIN {{join_table}} alias ON alias.{{child_key}} = tree.{{parent_key}}
        {{#if snapshot_field}}JOIN snapshot ON snapshot.id = alias.id{{/if}}
      WHERE NOT tree.{{cycle}}
    )
    ,snapshot AS (
      SELECT alias.id
      FROM {{model_table}} model
      {{#if snapshot_field}}
        LEFT JOIN (
          SELECT {{child_key}}, {{parent_key}}, {{snapshot_field}}, id,
            {{#is_active_field}}{{this}}, {{/is_active_field}}
            RANK() OVER (PARTITION BY {{child_key}} ORDER BY {{snapshot_field}} DESC, id DESC)
          FROM {{join_table}}
          WHERE {{snapshot_field}} <= '__snapshot_value__'
          {{#is_active_field}}AND {{this}}{{/is_active_field}}
        ) AS alias ON alias.{{child_key}} = model.id AND COALESCE(rank, 1) = 1
      {{else}}
        LEFT JOIN {{join_table}} alias ON alias.{{child_key}} = model.id
      {{/if}}
      WHERE alias.{{parent_key}} IS NOT NULL
    )
    SELECT model.*, tree.*
    FROM tree
    JOIN {{model_table}} model ON model.id = tree.{{parent_key}}
    WHERE NOT tree.{{cycle}}
  ) AS {{model_table}}
